// Code generated by entc, DO NOT EDIT.

package source

const (
	// Label holds the string label denoting the source type in the database.
	Label = "source"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSOURCENAME holds the string denoting the source_name field in the database.
	FieldSOURCENAME = "source_name"
	// FieldSOURCEADDRESS holds the string denoting the source_address field in the database.
	FieldSOURCEADDRESS = "source_address"
	// FieldSOURCETLE holds the string denoting the source_tle field in the database.
	FieldSOURCETLE = "source_tle"

	// EdgeSOURCERECORD holds the string denoting the source_record edge name in mutations.
	EdgeSOURCERECORD = "SOURCE_RECORD"

	// Table holds the table name of the source in the database.
	Table = "sources"
	// SOURCERECORDTable is the table the holds the SOURCE_RECORD relation/edge.
	SOURCERECORDTable = "recordfoods"
	// SOURCERECORDInverseTable is the table name for the Recordfood entity.
	// It exists in this package in order to avoid circular dependency with the "recordfood" package.
	SOURCERECORDInverseTable = "recordfoods"
	// SOURCERECORDColumn is the table column denoting the SOURCE_RECORD relation/edge.
	SOURCERECORDColumn = "source_source_record"
)

// Columns holds all SQL columns for source fields.
var Columns = []string{
	FieldID,
	FieldSOURCENAME,
	FieldSOURCEADDRESS,
	FieldSOURCETLE,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
